package com.wajam.mry.api.protobuf;
option optimize_for = LITE_RUNTIME;

message PTransport {
	optional PTransaction request = 1;
	repeated PTransactionValue response = 2;
}

message PTransaction {
	optional uint32 id = 1;
	optional PTransactionBlock innerBlock = 2;
}

message PTransactionResult {
	optional PTransactionError error = 1;
	repeated PTransactionValue data = 2;
}

message PTransactionError {
	required uint32 id = 1;
	required string message = 2;
}

message PTransactionBlock {
	required uint32 id = 1;
	repeated PTransactionOperation operations = 2;
	repeated PTransactionVariable variables = 3;

	optional PTransactionBlock parent = 5;
}

message PTransactionVariable {
	required uint32 block = 1;
	required uint32 id = 2;
	optional PTransactionValue value = 3;
}

message PTransactionValue {
    enum Type {
        NULL = 1;
        INT = 2;
        BOOL = 3;
        DOUBLE = 4;
        STRING = 5;
        BYTES = 6;
        ARRAY = 7;
        MAP = 8;
    }

    required Type type = 1;

	optional int64 int_value = 2;
	optional bool bool_value = 3;
	optional double double_value = 4;
	optional string string_value = 5;
	optional bytes bytes_value = 6;
	optional PTransactionCollection array = 7;
	optional PTransactionCollection map = 8;
}

message PTransactionCollection {
	repeated PTransactionCollectionValue values = 1;
}

message PTransactionCollectionValue {
	required PTransactionValue value = 1;
	optional string key = 2;
}

message PTransactionObject {
	optional PTransactionValue value = 1;
	optional PTransactionVariable variable = 2;
}

message PTransactionOperation {
	optional PTransactionOperationSet Set = 1;
	optional PTransactionOperationGet Get = 2;
	optional PTransactionOperationGetTable GetTable = 3;
	optional PTransactionOperationReturn Return = 4;
    optional PTransactionOperationGetAll GetAll = 5;
}

message PTransactionOperationSet {
    required PTransactionVariable destination = 1;
    required PTransactionObject key = 2;
    required PTransactionObject value = 3;
};

message PTransactionOperationGet {
    required PTransactionVariable source = 1;
    required PTransactionObject key = 2;
    required PTransactionVariable destination = 3;
};

message PTransactionOperationGetTable {
    required PTransactionObject table_name = 1;
    required PTransactionVariable destination = 2;
    optional PTransactionVariable source = 3;
};

message PTransactionOperationReturn {
    repeated PTransactionObject data = 1;
};

message PTransactionOperationGetAll {
    required PTransactionVariable source = 1;
    required PTransactionVariable destination = 2;
};

